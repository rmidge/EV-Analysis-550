{"title":"Network Service Gap Methods & Analysis","markdown":{"yaml":{"format":{"html":{"code-fold":true,"code-tools":true,"toc":true,"page-layout":"full"}},"execute":{"echo":true,"eval":true,"output":false,"warning":false,"error":false,"message":false},"title":"Network Service Gap Methods & Analysis"},"headingText":"Methods","containsRefs":false,"markdown":"\n\n\n\n\n\n\n\n\n\n## Data & Pre‑processing\n- **Census Data**: ACS data loaded from GeoPackage\n- **Filters**: Tracts with population > 0 and density ≥ 1000 people/mi²\n- **Filtered Tracts**: 385 census tracts remained after filtering, with 23 tracts excluded from the original 408 Philadelphia tracts\n- **Boundary**: Philadelphia city limits from GeoJSON\n- **Projection**: WGS84 (4326) initially, then State Plane (2272) for analysis\n\n## EV Station Retrieval\n- **API**: OpenChargeMap v3 with 10km search radius\n- **Station Data**: Extracts coordinates, connection points, max power (kW)\n- **Station Filtering**: Of 150 stations retrieved from the API, 20 were excluded for being outside the city boundary, leaving 130 stations for analysis\n- **Station Classification**:\n  - Level 1 (Slow): < 7 kW\n  - Level 2 (Medium): 7-50 kW\n  - DC Fast (Rapid): > 50 kW\n- **Validation**: Tracks excluded stations and reasons (outside boundary, missing coordinates)\n\n## Network Analysis\n- **Networks**: OSMnx-generated walking and driving networks\n- **Point Snapping**: Stations and census tract centroids are snapped to the nearest edge on the network for accurate routing\n- **Distance Calculation**: NetworkX-based shortest path routing with straight-line distance fallback\n- **Distance Filter**: 6km threshold to eliminate unnecessary calculations for distant pairs\n- **Caching**: Extensive caching of networks, snapped points, distances, service areas, and equity analysis for performance\n- **Service Areas**:\n  - Walking: 1,320ft (5min), 2,640ft (10min), 3,960ft (15min)\n  - Driving: 5,280ft (1mi), 10,560ft (2mi), 15,840ft (3mi)\n\n## Methodology: Computing the EV Charging \"Gap Score\"\n\nThe **gap score** is a single composite metric that ranks each Philadelphia census tract by its need for additional EV charging infrastructure. It blends:\n\n1. A **coverage** metric (physical access to existing chargers)  \n2. Four **socioeconomic vulnerability** metrics (income, poverty, density, education)\n\nTogether, these capture both *where* chargers are missing **and** *who* is most harmed by those gaps.\n\n### 1. Coverage Score (24%)\n\n#### What it measures  \nPer-tract service level based on walking and driving proximity, station quality, and population density.\n\n#### Calculation steps  \n1. **Compute network distances**  \n   - Shortest-path walking (NetworkX with point snapping) from each tract centroid to all chargers.\n   - Shortest-path driving likewise.\n   - Straight-line distance with detour factor (1.3× for walking, 1.5× for driving) as fallback when routing fails.\n\n2. **Apply proximity bands**  \n   - **Walking**:  \n     - Within 1,320 ft (~5 min): 0.7 score\n     - Within 2,640 ft (~10 min): 0.5 score\n     - Within 3,960 ft (~15 min): 0.3 score\n     - Beyond: 1.0 score (worst)\n   \n   - **Driving**:  \n     - Within 5,280 ft (~1 mile): 0.7 score\n     - Within 10,560 ft (~2 miles): 0.5 score\n     - Within 15,840 ft (~3 miles): 0.3 score\n     - Beyond: 1.0 score (worst)\n\n3. **Station quality adjustment**  \n   - Calculate quality index for each station:\n     $$\\text{quality\\_index} = \\text{num\\_points} \\times \\sqrt{\\frac{\\text{max\\_power}}{50}}$$\n   - Normalize to 0.5-1.5 range: \n     $$\\text{quality\\_factor} = 0.5 + \\frac{\\text{quality\\_index} - \\min(\\text{quality\\_index})}{\\max(\\text{quality\\_index}) - \\min(\\text{quality\\_index})}$$\n   - Multiply coverage by quality factor\n\n4. **Combine modes**  \n   $$\\text{coverage\\_score}_i = 0.4 \\times \\text{walk\\_weight}_i + 0.6 \\times \\text{drive\\_weight}_i$$\n\n5. **Density adjustment**  \n   - Scale down by up to 30% for high-density tracts:\n   $$\\text{coverage\\_score}_i \\times= (1 - 0.3 \\times \\frac{\\text{pop\\_density}_i}{\\max(\\text{pop\\_density})})$$\n\n6. **Label \"served\" vs. \"unserved\"**  \n   - **Served** if coverage_score > mean(coverage_score)  \n   - **Unserved** otherwise  \n\n### 2. Socioeconomic Component Scores (Combined 76%)\n\nWe compute four additional 0–1 scores that capture relative vulnerability:\n\n| Component      | Weight | Rationale                                                         |\n|:---------------|:------:|:------------------------------------------------------------------|\n| **Income**     | 16%    | Lower-income areas may have fewer EV adopters and fewer resources to retrofit homes. |\n| **Poverty**    | 24%    | High poverty correlates with lower EV uptake and higher energy burden. |\n| **Density**    | 20%    | More people in a tract → higher absolute charging demand.        |\n| **Education**  | 16%    | Education level often correlates with technology adoption rates.  |\n\n#### How we compute each score  \n1. Pull ACS census data for each tract.  \n2. For each metric (e.g. median income), scale the raw value so that the **most vulnerable** tract gets 1.0 and the **least vulnerable** gets 0.0.  \n   - e.g. `income_score_i = 1 - (income_i − min)/ (max − min)`  \n3. Clip to [0, 1] range.\n\n### 3. Combining into the Gap Score\n\nFor each tract $i$, we use a simple linear combination of the normalized components:\n\n$$\\begin{aligned}\n\\text{gap\\_score}_i \n&= w_{\\text{cov}}(1 - \\text{coverage}_i) \\\\\n&\\quad + w_{\\text{inc}}\\text{income\\_score}_i \n+ w_{\\text{pov}}\\text{poverty\\_score}_i \\\\\n&\\quad + w_{\\text{den}}\\text{density\\_score}_i \n+ w_{\\text{edu}}\\text{education\\_score}_i\n\\end{aligned}$$\n\nThis linear model ensures transparency and interpretability in how each factor contributes to the final score.\n\n#### Component directions:\n- **Coverage**: Inverted (1 - score) so higher values indicate worse coverage\n- **Income**: Inverted so lower incomes result in higher scores\n- **Poverty**: Higher poverty rates result in higher scores\n- **Density**: Higher population density results in higher scores\n- **Education**: Inverted so lower education levels result in higher scores\n\n#### Dynamic weights\nWeights are calculated based on observed disparities:\n\n1. We start with base weights that sum to 1.0:\n   - $w_{\\text{cov}} = 0.30$  \n   - $w_{\\text{inc}} = 0.20$  \n   - $w_{\\text{pov}} = 0.20$  \n   - $w_{\\text{den}} = 0.15$  \n   - $w_{\\text{edu}} = 0.15$\n\n2. We calculate effect sizes (Cohen's d) for each socioeconomic variable between served and unserved areas.\n\n3. For metrics with statistically significant disparities (p < 0.05), we adjust weights:\n   - Small effect (0.2-0.5): +5% weight\n   - Medium effect (0.5-0.8): +10% weight\n   - Large effect (>0.8): +15% weight\n\n4. We then re-normalize all weights to sum to 1.0.\n\n5. In our implementation, this resulted in the following weights:\n   - $w_{\\text{cov}} = 0.24$  \n   - $w_{\\text{inc}} = 0.16$  \n   - $w_{\\text{pov}} = 0.24$  \n   - $w_{\\text{den}} = 0.20$  \n   - $w_{\\text{edu}} = 0.16$\n\n### 4. Thresholding & Priority Tiers\n\nTo turn a continuous score into actionable categories, we use fixed thresholds:\n\n- **Low Priority**: gap_score ≤ 0.45\n- **Medium Priority**: 0.45 < gap_score ≤ 0.55\n- **High Priority**: 0.55 < gap_score ≤ 0.65\n- **Critical Priority**: gap_score > 0.65\n\nThese thresholds create a balanced distribution of priority levels, with approximately 30% Low, 28% Medium, 29% High, and 13% Critical priority tracts.\n\n### 5. Validation & Outputs\n\nThe analysis pipeline tracks:\n- Excluded stations and reasons for exclusion\n- Demographic coverage across income, education, and density levels\n- Statistical significance of socioeconomic disparities\n- Component contributions to the final scores\n- Distribution of priority categories with tract counts and percentages\n---\n\n**Footnote:**  \nTracts with large **group‑quarters** populations (e.g. university dorms) may show artificially high poverty. We document this caveat but retain them in the analysis to avoid geographic bias.\n\n---\n","srcMarkdownNoYaml":"\n\n\n\n\n\n\n\n\n# Methods\n\n## Data & Pre‑processing\n- **Census Data**: ACS data loaded from GeoPackage\n- **Filters**: Tracts with population > 0 and density ≥ 1000 people/mi²\n- **Filtered Tracts**: 385 census tracts remained after filtering, with 23 tracts excluded from the original 408 Philadelphia tracts\n- **Boundary**: Philadelphia city limits from GeoJSON\n- **Projection**: WGS84 (4326) initially, then State Plane (2272) for analysis\n\n## EV Station Retrieval\n- **API**: OpenChargeMap v3 with 10km search radius\n- **Station Data**: Extracts coordinates, connection points, max power (kW)\n- **Station Filtering**: Of 150 stations retrieved from the API, 20 were excluded for being outside the city boundary, leaving 130 stations for analysis\n- **Station Classification**:\n  - Level 1 (Slow): < 7 kW\n  - Level 2 (Medium): 7-50 kW\n  - DC Fast (Rapid): > 50 kW\n- **Validation**: Tracks excluded stations and reasons (outside boundary, missing coordinates)\n\n## Network Analysis\n- **Networks**: OSMnx-generated walking and driving networks\n- **Point Snapping**: Stations and census tract centroids are snapped to the nearest edge on the network for accurate routing\n- **Distance Calculation**: NetworkX-based shortest path routing with straight-line distance fallback\n- **Distance Filter**: 6km threshold to eliminate unnecessary calculations for distant pairs\n- **Caching**: Extensive caching of networks, snapped points, distances, service areas, and equity analysis for performance\n- **Service Areas**:\n  - Walking: 1,320ft (5min), 2,640ft (10min), 3,960ft (15min)\n  - Driving: 5,280ft (1mi), 10,560ft (2mi), 15,840ft (3mi)\n\n## Methodology: Computing the EV Charging \"Gap Score\"\n\nThe **gap score** is a single composite metric that ranks each Philadelphia census tract by its need for additional EV charging infrastructure. It blends:\n\n1. A **coverage** metric (physical access to existing chargers)  \n2. Four **socioeconomic vulnerability** metrics (income, poverty, density, education)\n\nTogether, these capture both *where* chargers are missing **and** *who* is most harmed by those gaps.\n\n### 1. Coverage Score (24%)\n\n#### What it measures  \nPer-tract service level based on walking and driving proximity, station quality, and population density.\n\n#### Calculation steps  \n1. **Compute network distances**  \n   - Shortest-path walking (NetworkX with point snapping) from each tract centroid to all chargers.\n   - Shortest-path driving likewise.\n   - Straight-line distance with detour factor (1.3× for walking, 1.5× for driving) as fallback when routing fails.\n\n2. **Apply proximity bands**  \n   - **Walking**:  \n     - Within 1,320 ft (~5 min): 0.7 score\n     - Within 2,640 ft (~10 min): 0.5 score\n     - Within 3,960 ft (~15 min): 0.3 score\n     - Beyond: 1.0 score (worst)\n   \n   - **Driving**:  \n     - Within 5,280 ft (~1 mile): 0.7 score\n     - Within 10,560 ft (~2 miles): 0.5 score\n     - Within 15,840 ft (~3 miles): 0.3 score\n     - Beyond: 1.0 score (worst)\n\n3. **Station quality adjustment**  \n   - Calculate quality index for each station:\n     $$\\text{quality\\_index} = \\text{num\\_points} \\times \\sqrt{\\frac{\\text{max\\_power}}{50}}$$\n   - Normalize to 0.5-1.5 range: \n     $$\\text{quality\\_factor} = 0.5 + \\frac{\\text{quality\\_index} - \\min(\\text{quality\\_index})}{\\max(\\text{quality\\_index}) - \\min(\\text{quality\\_index})}$$\n   - Multiply coverage by quality factor\n\n4. **Combine modes**  \n   $$\\text{coverage\\_score}_i = 0.4 \\times \\text{walk\\_weight}_i + 0.6 \\times \\text{drive\\_weight}_i$$\n\n5. **Density adjustment**  \n   - Scale down by up to 30% for high-density tracts:\n   $$\\text{coverage\\_score}_i \\times= (1 - 0.3 \\times \\frac{\\text{pop\\_density}_i}{\\max(\\text{pop\\_density})})$$\n\n6. **Label \"served\" vs. \"unserved\"**  \n   - **Served** if coverage_score > mean(coverage_score)  \n   - **Unserved** otherwise  \n\n### 2. Socioeconomic Component Scores (Combined 76%)\n\nWe compute four additional 0–1 scores that capture relative vulnerability:\n\n| Component      | Weight | Rationale                                                         |\n|:---------------|:------:|:------------------------------------------------------------------|\n| **Income**     | 16%    | Lower-income areas may have fewer EV adopters and fewer resources to retrofit homes. |\n| **Poverty**    | 24%    | High poverty correlates with lower EV uptake and higher energy burden. |\n| **Density**    | 20%    | More people in a tract → higher absolute charging demand.        |\n| **Education**  | 16%    | Education level often correlates with technology adoption rates.  |\n\n#### How we compute each score  \n1. Pull ACS census data for each tract.  \n2. For each metric (e.g. median income), scale the raw value so that the **most vulnerable** tract gets 1.0 and the **least vulnerable** gets 0.0.  \n   - e.g. `income_score_i = 1 - (income_i − min)/ (max − min)`  \n3. Clip to [0, 1] range.\n\n### 3. Combining into the Gap Score\n\nFor each tract $i$, we use a simple linear combination of the normalized components:\n\n$$\\begin{aligned}\n\\text{gap\\_score}_i \n&= w_{\\text{cov}}(1 - \\text{coverage}_i) \\\\\n&\\quad + w_{\\text{inc}}\\text{income\\_score}_i \n+ w_{\\text{pov}}\\text{poverty\\_score}_i \\\\\n&\\quad + w_{\\text{den}}\\text{density\\_score}_i \n+ w_{\\text{edu}}\\text{education\\_score}_i\n\\end{aligned}$$\n\nThis linear model ensures transparency and interpretability in how each factor contributes to the final score.\n\n#### Component directions:\n- **Coverage**: Inverted (1 - score) so higher values indicate worse coverage\n- **Income**: Inverted so lower incomes result in higher scores\n- **Poverty**: Higher poverty rates result in higher scores\n- **Density**: Higher population density results in higher scores\n- **Education**: Inverted so lower education levels result in higher scores\n\n#### Dynamic weights\nWeights are calculated based on observed disparities:\n\n1. We start with base weights that sum to 1.0:\n   - $w_{\\text{cov}} = 0.30$  \n   - $w_{\\text{inc}} = 0.20$  \n   - $w_{\\text{pov}} = 0.20$  \n   - $w_{\\text{den}} = 0.15$  \n   - $w_{\\text{edu}} = 0.15$\n\n2. We calculate effect sizes (Cohen's d) for each socioeconomic variable between served and unserved areas.\n\n3. For metrics with statistically significant disparities (p < 0.05), we adjust weights:\n   - Small effect (0.2-0.5): +5% weight\n   - Medium effect (0.5-0.8): +10% weight\n   - Large effect (>0.8): +15% weight\n\n4. We then re-normalize all weights to sum to 1.0.\n\n5. In our implementation, this resulted in the following weights:\n   - $w_{\\text{cov}} = 0.24$  \n   - $w_{\\text{inc}} = 0.16$  \n   - $w_{\\text{pov}} = 0.24$  \n   - $w_{\\text{den}} = 0.20$  \n   - $w_{\\text{edu}} = 0.16$\n\n### 4. Thresholding & Priority Tiers\n\nTo turn a continuous score into actionable categories, we use fixed thresholds:\n\n- **Low Priority**: gap_score ≤ 0.45\n- **Medium Priority**: 0.45 < gap_score ≤ 0.55\n- **High Priority**: 0.55 < gap_score ≤ 0.65\n- **Critical Priority**: gap_score > 0.65\n\nThese thresholds create a balanced distribution of priority levels, with approximately 30% Low, 28% Medium, 29% High, and 13% Critical priority tracts.\n\n### 5. Validation & Outputs\n\nThe analysis pipeline tracks:\n- Excluded stations and reasons for exclusion\n- Demographic coverage across income, education, and density levels\n- Statistical significance of socioeconomic disparities\n- Component contributions to the final scores\n- Distribution of priority categories with tract counts and percentages\n---\n\n**Footnote:**  \nTracts with large **group‑quarters** populations (e.g. university dorms) may show artificially high poverty. We document this caveat but retain them in the analysis to avoid geographic bias.\n\n---\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":false,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","highlight-style":"solarized","css":["../styles.css"],"toc":true,"include-in-header":[{"text":"<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css\">\n"}],"output-file":"2-Service-Gap-Analysis.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","theme":"cosmo","code-copy":true,"page-layout":"full","title":"Network Service Gap Methods & Analysis"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}